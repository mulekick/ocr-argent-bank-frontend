openapi: 3.0.3
info:
  title: Argent Bank™ - OpenAPI 3.0
  description: |-
    API specification for the endpoints used to access the backend services of the Argent Bank™ website.
    This specification describes the enpoints implementing the user sessions management API.
  contact:
    email: moolekick@gmail.com
  license:
    name: MIT
    url: https://mit-license.org/
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://192.168.1.26:3001/api/v1
tags:
  - name: user
    description: endpoints used to retrieve / update user identity information
paths:
  /user/signup:
    post:
      tags:
        - user
      summary: user signup
      description: create a new user profile to access the backend services 
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/profile'
        required: true
      responses:
        '200':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
        '400':
          description: Error during signup
  /user/login:
    post:
      tags:
        - user
      summary: user login
      description: authentify user to the backend services using user credentials
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/credentials'
        required: true
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Error during login
  /user/profile:
    post:
      tags:
        - user
      summary: user profile retrieve
      description: retrieve user profile informations for an authenticated user
      security:
        - bearer-auth: []
      responses:
        '200':
          description: Successfully got user profile data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Error during profile data retrieval
        '401':
          description: Not authorized
    put:
      tags:
        - user
      summary: user profile update
      description: update user profile informations for an authenticated user
      security:
        - bearer-auth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/identity'
        required: true
      responses:
        '200':
          description: Successfully updated user profile data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResponse'
        '400':
          description: Error during profile data update
        '401':
          description: Not authorized
components:
  securitySchemes:
    # authorization header
    bearer-auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: server-provided json web token
  schemas:        
    # user credentials
    credentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    # user identity
    identity:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    # user profile
    profile:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string 
    # signup response body
    SignupResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          # user profile object
          $ref: '#/components/schemas/profile'
    # login response body
    LoginResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          # JSON web token
          type: object
          properties:
            token:
              type: string
              pattern: '^[\w-]*\.[\w-]*\.[\w-]*$'
    # profile retrieve response body
    ProfileResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          # user profile object
          $ref: '#/components/schemas/profile'
    # profile update response body
    UpdateResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          # user profile object
          $ref: '#/components/schemas/profile'